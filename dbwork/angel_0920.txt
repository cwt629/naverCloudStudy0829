-- angel 계정 연습

-- 전체 시퀀스 조회
select * from seq;

-- sequence 생성 (seq 1 : 숫자 1임)
create sequence seq1 start with 1 increment by 1; -- 1부터 1씩 증가하는 시퀀스 생성(cache는 자동으로 20으로 잡힘)
create sequence seq2 start with 5 increment by 3 nocache; -- 5부터 3씩 증가, cache값은 0
create sequence seq3 maxvalue 100 nocache; -- start with와 increment 생략 시 모두 1로 자동 지정. 최대값 100. 100 넘으면 안들어감

-- 값 발생시키기
select seq1.nextval, seq2.nextval, seq3.nextval from dual;

-- 시퀀스 제거
drop sequence seq1;
drop sequence seq2;
drop sequence seq3;

-- 새로운 시퀀스 하나 생성
create sequence seq_test nocache;

-- table 생성
create table test(
    num number(3) primary key, -- 3자리 숫자, primary key (unique & not null)
    name varchar2(20) not null, -- 20자리 문자열, 비어있지 않음
    blood char(2) default 'A', -- 2자리 문자열, 제공된 데이터 없으면 기본값 A
    weight number(5,2), -- 정수부 5자리, 소수부 2자리 숫자
    birthday date); -- 날짜
    
-- 데이터 추가
-- 일부 데이터만 넣는 경우, 컬럼명을 반드시 표기한다
insert into test (num, name) values (seq_test.nextval, '캔디');

-- 순서대로 모든 컬럼값을 넣는 경우, 컬럼명 생략 가능
insert into test values (seq_test.nextval, '캐서린', 'AB', 67.89, sysdate);

-- 제약조건에 안맞는 경우 (오류 확인)
insert into test (num, blood) values (seq_test.nextval, 'O'); -- 꼭 입력해야하는 요소(num, name)를 하나라도 입력하지 않은 경우(실패했지만 sequence 자체는 돌아서, 다음 데이터가 3번이 아닌 4번이 된다)
insert into test (name, blood) values ('Lee', 'O');
insert into test (num, name, blood) values (2, 'Lee', 'O'); -- 이미 2번이 있을때 수행한 경우: 무결성 제약 조건

-- 제대로 된 데이터 3개 정도만 추가하기
insert into test values (seq_test.nextval, '강호동', 'B', 78.9, '2000-10-10');
insert into test values (seq_test.nextval, '유재석', 'A', 76.45, '1979-12-25');
insert into test values (seq_test.nextval, '이영자', 'O', 77.77, '1969-09-09');

rollback; -- 마지막 commit한 이후 sql문(DML: insert, delete, update) 모두 취소

commit; -- 확정시키고, 더이상 rollback 안됨

insert into test values (seq_test.nextval, '김말동', 'B', 56.78, '1989-09-09');



-- 데이터 수정하기

-- 강호동의 혈액형을 'AB'형으로 수정
update test set blood = 'AB' where name = '강호동';

-- 두 개의 컬럼 수정(캔디에 해당하는 인덱스로 수정해보자)
update test set weight = 80.8, birthday = sysdate where num = 13;



-- 데이터 삭제하기
-- **주의** where절을 깜빡하고 먼저 실행해버리면 싹 다 날라가는 대참사가 발생하니...조심하자.
-- 실수했다면 뭐...rollback하자.
--delete from test;
rollback;

-- num이 13,15,16인 행을 삭제하려면?
delete from test where num in (13, 15, 16);



-- table 제거
drop table test; -- 연습 끝난 테이블과 시퀀스들은 그때그때 지워주자고 권장하셨다.
-- 시퀀스 제거
drop sequence seq_test;
rollback; -- DML(insert, update, delete만 롤백되고 drop은 롤백되지 않는다)

----------------------------------------------------------------------------------------------

create table person (
    num number(3) CONSTRAINT person_pk_num primary key,
    blood char(2));
    
-- 기존 제약조건 제거
alter table person drop CONSTRAINT person_pk_num;

-- 다시 primary key에 대한 제약조건 추가
alter table person add constraint person_num_pk primary key(num); -- num에게 primary key라는 조건 추가

-- blood에 대해서 check 제약조건 추가
alter table person add constraint person_ck_blood check (blood in ('A', 'B', 'O', 'AB'));

-- 데이터 추가
insert into person values (1, 'A');
insert into person values (1, 'B'); -- error: 무결성 제약 조건(ANGEL.PERSON_NUM_PK)에 위배됩니다 (같은 번호라서)
insert into person values (2, 'b'); -- error: 체크 제약조건(ANGEL.PERSON_CK_BLOOD)이 위배되었습니다
insert into person values (2, 'O');

-- 컬럼을 추가(add)
alter table person add name varchar2(20);
alter table person add score number(5, 1) default 30.5;

-- 컬럼명 제거(drop column)
alter table person drop column num;

-- java 라는 컬럼을 number 타입으로 추가 후 1~100 사이값만 들어오도록 제약조건 추가
alter table person add java number(3) default 0;
alter table person add constraint person_ck_java check (java >= 0 and java <= 100);

-- 컬럼명 변경하기(rename column)
alter table person rename column java to spring;

-- 데이터 추가 시 컬럼 순서와 다른 순서대로 주고 싶으면, 컬럼명을 주면 된다
insert into person (name, blood, spring, score) values ('lee', 'O', 90, 35);

drop table person;
